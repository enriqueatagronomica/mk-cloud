log4j.rootCategory=debug, file

# Root logger option
log4j.rootLogger=INFO, file, stdout

# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d [%t] %-5p %c - %n %m %n

#If we want to log waf module as separate file then use command below
log4j.category.org.apache.axis.transport.http=debug,file
log4j.category.org.apache.ws.axis.security=error,file
log4j.category.org.apache.xml.security.Init = error,file
log4j.category.org.apache.axis.encoding.DeserializationContext = error, file
log4j.category.org.apache.axis.encoding.SerializationContext =error, file
log4j.category.org.apache.axis.i18n.ProjectResourceBundle =error, file
log4j.category.org.apache.axis.message = error, file
log4j.category.org.apache.axis.utils= error, file
log4j.category.org.apache.axis=error, file
log4j.category.org.apache.xml.security.algorithms = error, file
log4j.category.org.apache.axis.client.Call =error, file
log4j.category.com.et=debug,file

#If we want to log waf module as separate file then use command below
#log4j.category.com.dor.waf=warn, waf
log4j.appender.file=org.apache.log4j.RollingFileAppender

log4j.appender.file.File=/home/odoo/desarrollo/ws/eclipse-odoo-pydev/ETClient/log.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d [%t] %-5p %c:%L - %n %m %n
# Control the maximum log file size
log4j.appender.file.MaxFileSize=100000KB
# Archive log files (one backup file here)
log4j.appender.file.MaxBackupIndex=2

log4j.logger.httpclient.wire.content=DEBUG
 
